#include <iot13v.h>
#include <macros.h>
#define uchar  unsigned char 
#define uint  unsigned int 
#define Min 20
#define Max 35
static uint LASTADCVAL = 0;
static uchar  mark=0;
static uchar LEDStatus = 0;
#if 1
 static uint avgADC;
static  uchar i,cnt;
static uint tmpADC,_ADCsum; 
#endif
#define Timer0  1//
#define ADCEN  0
/*微秒级延时程序*/
void delay_us(uchar time)
{     
  	 while (time--);
}	  




#if Timer0  ///定时器


//TIMER0 initialize - prescale:64
// WGM: Normal
// desired value: 50Hz
// actual value: 50.134Hz (0.3%)
void timer0_init(void)
{
     TCCR0B = 0x00; //stop
     OCR0A = 0xBB;
     TCNT0 = 0x45; //set count
     TCCR0A = 0x00; 
     TCCR0B = 0x03; //start timer
}

#pragma interrupt_handler timer0_ovf_isr:4
void timer0_ovf_isr(void)
{
     TCNT0 = 0x45; //reload counter value
	 if(mark)
	 {
	    if(LEDStatus)
		{
		  LEDStatus  = 0;
		  PORTB &=~ (1<<3);
		}
		else
		{
		  LEDStatus  = 1;
		  PORTB |= (1<<3);	
		}
	 }
}


#endif


//IO口初始化
void port_init(void)
{
 	DDRB = (1<<PB3)|(0<<PB4);	//I/O状态
	PORTB = 0x0;

}
#if ADCEN
//ADC转始化设置
void adc_init(void)
{
     ADCSRA = 0x00;  //disable adc
     ADCMUX = 0x42;  //使用VCC作为参考电压，选择ADC3（PB3）输入通道
     ACSR  = 0x80;   //禁用模拟比较器，降低功耗
     ADCSRB = 0x00;  //ADC连续转换模式
     ADCSRA = 0xEA;  //使能ADC开始转换，自动触发使能,使能转换结束中断,4分频
}

//ADC转换结束中断
#pragma interrupt_handler adc_isr:10
void adc_isr(void)
{

     uint value;
     value=ADCL;          
     value|=(uint)ADCH << 8; 
	 LASTADCVAL=value;
}
#endif


//call this routine to initialize all peripherals
void init_devices(void)
{
    //stop errant interrupts until set up
    //CLI(); //disable all interrupts
    port_init();

#if Timer0

	 timer0_init();
#endif
#if  ADCEN
    adc_init();
#endif

    MCUCR = 0x00;
#if Timer0
	TIMSK0 = 0x02; //timer interrupt sources
#else
 //   TIMSK0 = 0x00; //timer interrupt sources
#endif
    GIMSK = 0x00; //interrupt sources

    SEI(); //re-enable interrupts
    //all peripherals are now initialized
}


void main(void)
{

    init_devices();
    while(1)
    {
	 		
#if 	1
		   _ADCsum = 0;
		   tmpADC = 0;

		   i = 5;cnt = 8;
		   _ADCsum = 88;; 

	   
#endif
	  mark = 1;
    }
	
	   	 
}



